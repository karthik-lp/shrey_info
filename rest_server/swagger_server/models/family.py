# coding: utf-8
# Autogenerated

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401


from swagger_server.models.base_model_ import Model
from swagger_server import util

from typing import Optional


class Family(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        id: str = None,
        friendly_name: str = None,
        total_members: int = None,
        last_changed: datetime = None,
    ):
        """Family - a model defined in Swagger

        :param id: The id of this Family.
        :type id: str
        :param friendly_name: The friendly_name of this Family.
        :type friendly_name: str
        :param total_members: Total members in the Family.
        :type total_members: int
        :param last_changed: The last_changed of this Family.
        :type last_changed: datetime
        """
        self.swagger_types = {
            "id": str,
            "friendly_name": str,
            "total_members": int,
            "last_changed": datetime,
        }

        self.attribute_map = {
            "id": "id",
            "parent_id": "parent_id",
            "friendly_name": "friendly_name",
            "total_members": "total_members",
            "last_changed": "last_changed",
        }
        self._id = id
        self._friendly_name = friendly_name
        self.total_members = total_members
        self._last_changed = last_changed

    @classmethod
    def from_dict(cls, dikt) -> "Family":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Family of this Family.
        :rtype: Family
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> Optional[str]:
        """Gets the id of this Family.


        :return: The id of this Family.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Family.


        :param id: The id of this Family.
        :type id: str
        """

        self._id = id


    @property
    def friendly_name(self) -> Optional[str]:
        """Gets the friendly_name of this Family.


        :return: The friendly_name of this Family.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name: str):
        """Sets the friendly_name of this Family.


        :param friendly_name: The friendly_name of this Family.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name


    @property
    def total_members(self) -> Optional[int]:
        """Gets the width of this Environment.


        :return: The width of this Environment.
        :rtype: int
        """
        return self._total_members

    @total_members.setter
    def total_members(self, total_members: int):
        """Sets the width of this Family.


        :param width: The width of this Family.
        :type width: int
        """

        self._total_members = total_members

    @property
    def last_changed(self) -> Optional[datetime]:
        """Gets the last_changed of this Family.


        :return: The last_changed of this Family.
        :rtype: datetime
        """
        return self._last_changed

    @last_changed.setter
    def last_changed(self, last_changed: datetime):
        """Sets the last_changed of this Family.


        :param last_changed: The last_changed of this Family.
        :type last_changed: datetime
        """

        self._last_changed = last_changed
